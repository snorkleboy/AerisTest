"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isOpenLayers = exports.isGoogle = exports.isMapbox = exports.isLeaflet = exports.isCoordObject = exports.mapTimestampFromDate = void 0;

var _dateFns = require("date-fns");

var _utils = require("../utils");

/* eslint-disable spaced-comment */
/// <reference path="../../node_modules/@types/leaflet/index.d.ts" />
/// <reference path="../../node_modules/@types/mapbox-gl/index.d.ts" />
/// <reference path="../../node_modules/@types/googlemaps/index.d.ts" />
/// <reference path="../../node_modules/@types/openlayers/index.d.ts" />

/* eslint-enable spaced-comment */
var mapTimestampFromDate = function (date) {
  var gmtDate = new Date(date.getTime() + date.getTimezoneOffset() * 60 * 1000);
  return (0, _dateFns.format)(gmtDate, 'YYYYMMDDHHmm00');
};

exports.mapTimestampFromDate = mapTimestampFromDate;

var isCoordObject = function (value) {
  if ((0, _utils.isPlainObject)(value)) {
    var lat = value.lat,
        lon = value.lon;
    return (0, _utils.isset)(lat) && (0, _utils.isset)(lon);
  }

  return false;
};

exports.isCoordObject = isCoordObject;

var isLeaflet = function (value) {
  if (value) {
    var hasMapProp = (0, _utils.has)(value, 'openPopup');

    if (typeof L !== 'undefined' && (value instanceof L.map || value instanceof L.Map) && hasMapProp) {
      return true;
    }

    if (!(0, _utils.isHTMLElement)(value) && hasMapProp) {
      return true;
    }
  }

  return false;
};

exports.isLeaflet = isLeaflet;

var isMapbox = function (value) {
  if (value) {
    var hasMapProp = (0, _utils.has)(value, 'queryRenderedFeatures');

    if (typeof mapboxgl !== 'undefined' && value instanceof mapboxgl.Map && hasMapProp) {
      return true;
    }

    if (!(0, _utils.isHTMLElement)(value) && hasMapProp) {
      return true;
    }
  }

  return false;
};

exports.isMapbox = isMapbox;

var isGoogle = function (value) {
  if (value) {
    var hasMapProp = (0, _utils.has)(value, 'getStreetView');

    if (typeof google !== 'undefined' && value instanceof google.maps.Map && hasMapProp) {
      return true;
    }

    if (!(0, _utils.isHTMLElement)(value) && hasMapProp) {
      return true;
    }
  }

  return false;
};

exports.isGoogle = isGoogle;

var isOpenLayers = function (value) {
  if (value) {
    var hasMapProp = (0, _utils.has)(value, 'forEachFeatureAtPixel');

    if (typeof ol !== 'undefined' && value instanceof ol.Map && hasMapProp) {
      return true;
    }

    if (!(0, _utils.isHTMLElement)(value) && hasMapProp) {
      return true;
    }
  }

  return false;
};

exports.isOpenLayers = isOpenLayers;