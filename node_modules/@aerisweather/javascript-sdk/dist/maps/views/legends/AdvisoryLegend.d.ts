import Legend from './Legend';
/**
 * An advisory legend is a legend object that is responsible for displaying and managing a point
 * legend based on dynamic advisory data that filters advisory elements based on specific filters
 * and/or VTEC codes.
 *
 * @export
 * @class AdvisoryLegend
 * @extends {Legend}
 */
export default class AdvisoryLegend extends Legend {
    private _account;
    private _request;
    /**
     * Forces the legend to update if needed.
     *
     * Typically this method is called with valid coordinate bounds passed to the `opts.within`
     * property in order to update the advisories displayed based on those within the specified
     * bounds.
     *
     * @param {*} [opts]
     * @memberof AdvisoryLegend
     */
    update(opts?: any): void;
    protected _update(): void;
    protected _getVtecCodes(opts?: any): Promise<string[]>;
    private _getPlace;
    private _getAdvisories;
}
