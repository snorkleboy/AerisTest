import VectorSource from './VectorSource';
import TextAnimation from '../../anim/TextAnimation';
import { LayerDataType } from '../types';
/**
 * `TextSource` is an object that is responsible for loading data and managing a series of text
 * annotations on a map view.
 */
export default class TextSource extends VectorSource {
    private _animationMarkers;
    /**
     * Initializes a new point data source instance configured with the specified AMP layer code
     * and API service.
     *
     * @param layer
     * @param service
     * @param opts
     */
    constructor(key: string, opts?: any);
    /**
     * Requests data for the layer based on the provided geographical map bounds and date range.
     *
     * @param bounds
     * @param from
     * @param to
     * @returns A Promise containing the resulting marker data objects.
     */
    load(params?: {
        [key: string]: any;
    }): Promise<LayerDataType>;
    protected _processRecord(record: any): any;
    /**
     * Requests data required for animating text values across an animation's time range. This data
     * set is usually different than that returned by `load()`.
     *
     * @returns A Promise containing the resulting marker data objects.
     */
    private _loadAnimationData;
    /**
     * Animation Provider
     */
    animationData(animation: TextAnimation): Promise<any>;
}
