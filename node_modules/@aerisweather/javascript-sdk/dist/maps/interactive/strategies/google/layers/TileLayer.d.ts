/// <reference types="googlemaps" />
import GoogleLayer from './Layer';
export default class GoogleTileLayer extends GoogleLayer {
    private _layer;
    private _opts;
    readonly layer: google.maps.ImageMapType;
    constructor(layer: string, id?: string);
    /**
     * Updates the tile or image url for the layer.
     *
     * @param {string} url
     * @memberof TileLayer
     */
    setUrl(url: string): void;
    /**
     * Adds the layer to the specified map.
     *
     * @param {google.maps.Map} map
     * @param {number} index
     * @memberof Layer
     */
    addTo(map: google.maps.Map, index?: number): void;
    /**
     * Removes the layer from the map it is currently active on.
     *
     * @returns
     * @memberof Layer
     */
    remove(): void;
    /**
     * Shows the layer on the map.
     *
     * @memberof Layer
     */
    show(): void;
    /**
     * Hides the layer on the map.
     *
     * @memberof Layer
     */
    hide(): void;
    /**
     * Changes the opacity of the layer.
     *
     * @param {number} value
     * @memberof Layer
     */
    setOpacity(value: number): void;
    setZIndex(index: number): void;
    /**
     * Forces a redraw of the layer on the map.
     *
     * @returns
     * @memberof Layer
     */
    invalidate(): void;
}
