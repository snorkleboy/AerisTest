"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _CoordinateBounds = _interopRequireDefault(require("../../geo/CoordinateBounds"));

var _utils = require("../../utils");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var LineString =
/** @class */
function () {
  function LineString(coords) {
    if ((0, _utils.isEmpty)(coords)) {
      throw new Error('Invalid coordinates for LineString');
    }

    if (coords.length < 2) {
      throw new Error('Coordinate count in LineString is less than 2');
    }

    this.coordinates = coords.map(function (latlon) {
      if (latlon.length < 2) {
        throw new Error('Coordinate dimension count is less than 2');
      }

      var lon = latlon[0],
          lat = latlon[1];
      return {
        lat: lat,
        lon: lon
      };
    });
  }

  LineString.prototype.toArray = function (reversed) {
    if (reversed === void 0) {
      reversed = false;
    }

    return this.coordinates.map(function (coord) {
      return reversed ? [coord.lon, coord.lat] : [coord.lat, coord.lon];
    });
  };

  LineString.prototype.bounds = function () {
    return _CoordinateBounds.default.fromPoints(this.coordinates);
  };

  return LineString;
}();

var _default = LineString;
exports.default = _default;
module.exports = exports.default;