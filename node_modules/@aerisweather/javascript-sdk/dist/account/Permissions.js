"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _utils = require("../utils");

var _ApiRequest = _interopRequireDefault(require("../network/api/ApiRequest"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var __awaiter = void 0 && (void 0).__awaiter || function (thisArg, _arguments, P, generator) {
  return new (P || (P = Promise))(function (resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }

    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }

    function step(result) {
      result.done ? resolve(result.value) : new P(function (resolve) {
        resolve(result.value);
      }).then(fulfilled, rejected);
    }

    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};

var __generator = void 0 && (void 0).__generator || function (thisArg, body) {
  var _ = {
    label: 0,
    sent: function () {
      if (t[0] & 1) throw t[1];
      return t[1];
    },
    trys: [],
    ops: []
  },
      f,
      y,
      t,
      g;
  return g = {
    next: verb(0),
    "throw": verb(1),
    "return": verb(2)
  }, typeof Symbol === "function" && (g[Symbol.iterator] = function () {
    return this;
  }), g;

  function verb(n) {
    return function (v) {
      return step([n, v]);
    };
  }

  function step(op) {
    if (f) throw new TypeError("Generator is already executing.");

    while (_) try {
      if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
      if (y = 0, t) op = [op[0] & 2, t.value];

      switch (op[0]) {
        case 0:
        case 1:
          t = op;
          break;

        case 4:
          _.label++;
          return {
            value: op[1],
            done: false
          };

        case 5:
          _.label++;
          y = op[1];
          op = [0];
          continue;

        case 7:
          op = _.ops.pop();

          _.trys.pop();

          continue;

        default:
          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
            _ = 0;
            continue;
          }

          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
            _.label = op[1];
            break;
          }

          if (op[0] === 6 && _.label < t[1]) {
            _.label = t[1];
            t = op;
            break;
          }

          if (t && _.label < t[2]) {
            _.label = t[2];

            _.ops.push(op);

            break;
          }

          if (t[2]) _.ops.pop();

          _.trys.pop();

          continue;
      }

      op = body.call(thisArg, _);
    } catch (e) {
      op = [6, e];
      y = 0;
    } finally {
      f = t = 0;
    }

    if (op[0] & 5) throw op[1];
    return {
      value: op[0] ? op[1] : void 0,
      done: true
    };
  }
};

/**
 * A `Permissions` object is responsible for requesting and storing access permissions information
 * associated with an Aeris API account.
 */
var Permissions =
/** @class */
function () {
  /**
   * Initializes a permissions object for an account associated with the specified client id
   * and secret.
   *
   * @param id
   * @param secret
   */
  function Permissions(id, secret) {
    this.loading = false;
    this.id = id;
    this.secret = secret;
    this.get();
  }
  /**
   * Returns a Promise containing the permissions data, fetching the data from the API initially
   * if required.
   */


  Permissions.prototype.get = function () {
    return __awaiter(this, void 0, void 0, function () {
      var request, result;
      return __generator(this, function (_a) {
        switch (_a.label) {
          case 0:
            // always return a copy of our data object in case callers change the data contained within
            if (this.hasLoaded()) {
              if (this.permissions) {
                return [2
                /*return*/
                , (0, _utils.cloneDeep)(this.permissions)];
              }

              return [2
              /*return*/
              , null];
            }

            this.loading = true;
            request = new _ApiRequest.default({
              client: {
                id: this.id,
                secret: this.secret
              }
            });
            return [4
            /*yield*/
            , request.endpoint('oauth2/permissions').get()];

          case 1:
            result = _a.sent();
            this.loading = false;

            if (result.data) {
              this.permissions = result.data;
              this.cached = new Date();
            }

            return [2
            /*return*/
            , (0, _utils.cloneDeep)(this.permissions)];
        }
      });
    });
  };
  /**
   * A Boolean value indicating if permissions data is currently being requested from the API.
   */


  Permissions.prototype.isLoading = function () {
    return this.loading;
  };
  /**
   * A Boolean value indicating if permissions have been loaded.
   */


  Permissions.prototype.hasLoaded = function () {
    return this.permissions != null;
  };
  /**
   * Returns whether the account has access to the specified endpoint or destination.
   * @param endpoint
   */


  Permissions.prototype.canAccess = function (endpoint) {
    var result = (0, _utils.get)(this.permissions, endpoint);

    if (result) {
      return result.allow;
    }

    return false;
  };

  return Permissions;
}();

var _default = Permissions;
exports.default = _default;
module.exports = exports.default;