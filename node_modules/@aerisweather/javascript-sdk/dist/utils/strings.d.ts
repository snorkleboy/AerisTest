import { ICoordinateBounds } from '../interfaces/ICoordinate';
/**
 * Returns a states collection keyed by country (`us` or `ca`) and the two-letter state
 * abbreviation.
 *
 * @returns {{ [key: string]: { [key: string]: string }}}
 */
export declare const states: () => {
    [key: string]: {
        [key: string]: string;
    };
};
/**
 * Returns a country collection keyed by two-letter country abbreviation.
 *
 * @returns {{ [key: string]: string }}
 */
export declare const countries: () => {
    [key: string]: string;
};
/**
 * Returns a new string by capitalizing the first letter of each word in the specified string.
 *
 * @param {string} str
 * @returns {string}
 */
export declare const ucwords: (str: string) => string;
/**
 * Returns a new string by capitalizing the first letter in the specified string.
 *
 * @param {string} str
 * @returns {string}
 */
export declare const ucfirst: (str: string) => string;
/**
 * Returns a new string by converting the specified string to camelcase.
 *
 * @param {string} str
 * @returns {string}
 */
export declare const camelcase: (str: string) => string;
/**
 * Returns a new string by converting a camelcase string to hyphenated.
 *
 * @param {string} str
 * @returns {string}
 */
export declare const hyphenate: (str: string) => string;
/**
 * Converts the specified coordinate to a string whose values are rounded to the nearest decimal
 * place according to `places`.
 *
 * @param {number} lat
 * @param {number} lon
 * @param {number} [places=3]
 * @returns {string}
 */
export declare const toCoord: (lat: number, lon: number, places?: number) => string;
/**
 * Converts the specified coordinate bounds object to a string whose values are rounded to the
 * nearest decimal place according to `places`.
 *
 * @param {ICoordinateBounds} bounds
 * @param {number} [places=3]
 * @returns {string}
 */
export declare const toBounds: (bounds: ICoordinateBounds, places?: number) => string;
/**
 * Returns a new string by formatting the specified string as a place name.
 *
 * @param {string} str
 * @returns {string}
 */
export declare const toName: (str: string) => string;
export declare const prefixCSSClassName: (className: string) => string;
export declare const toDate: (str: string) => Date;
