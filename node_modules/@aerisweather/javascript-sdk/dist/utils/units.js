"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.unitsForProp = exports.UnitType = void 0;

var _ = require(".");

var UnitType;
exports.UnitType = UnitType;

(function (UnitType) {
  UnitType[UnitType["Imperial"] = 0] = "Imperial";
  UnitType[UnitType["Metric"] = 1] = "Metric";
  UnitType[UnitType["Combined"] = 2] = "Combined";
})(UnitType || (exports.UnitType = UnitType = {}));
/**
 * @ignore
 */


var _units = {
  imperial: {
    temp: '&deg;F',
    speed: ' mph',
    distance: ' mi',
    height: ' ft',
    pressure: ' in',
    percent: '%',
    precip: '"',
    rain: '"',
    snow: '"',
    text: '',
    degree: '&deg;'
  },
  metric: {
    temp: '&deg;C',
    speed: ' kmh',
    distance: ' km',
    height: ' m',
    pressure: ' mb',
    percent: '%',
    precip: ' mm',
    rain: ' mm',
    snow: ' cm',
    phrase: 'met',
    degree: '&deg;'
  }
};

var unitsForProp = function (prop, metric) {
  var type = metric ? 'metric' : 'imperial';
  var patterns = {
    temp: '(temp|dewpoint|dewpt|feelslike|windchill|heatindex)',
    speed: '(speed|gust|wind)',
    distance: '(visibility)',
    height: '(ceiling|elev|elevation)',
    pressure: '(pressure|altimeter)',
    rain: '(precip|rain|prcp)',
    snow: '(snow|snowdepth)',
    text: '(phrase)',
    percent: '(rh|humid|pop)'
  };
  prop = prop.toLowerCase();
  var units;
  Object.keys(patterns).forEach(function (key) {
    var re = new RegExp(patterns[key], 'i');

    if (prop.match(re)) {
      units = (0, _.get)(_units, type + "." + key);
    }
  });
  return units;
};

exports.unitsForProp = unitsForProp;