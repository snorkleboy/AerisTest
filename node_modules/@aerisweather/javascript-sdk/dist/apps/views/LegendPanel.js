"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _Panel = _interopRequireDefault(require("../ui/Panel"));

var _LegendView = _interopRequireDefault(require("../../maps/views/legends/LegendView"));

var _utils = require("../utils");

var _utils2 = require("../../utils");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var __extends = void 0 && (void 0).__extends || function () {
  var extendStatics = function (d, b) {
    extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    };

    return extendStatics(d, b);
  };

  return function (d, b) {
    extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

/**
 * A `LegendPanel` is a panel component that renders and manages a `LegendView` instance.
 *
 * @export
 * @class LegendPanel
 * @extends {Panel<LegendPanelOptions, LegendPanelState>}
 */
var LegendPanel =
/** @class */
function (_super) {
  __extends(LegendPanel, _super);
  /**
   * Initializes and returns a legend panel instance configured with the specified options.
   *
   * @param {LegendPanelOptions} [opts]
   * @memberof LegendPanel
   */


  function LegendPanel(opts) {
    var _this = this;

    opts = (0, _utils2.extend)({
      legend: {
        size: {
          width: 300,
          height: 0
        }
      }
    }, opts, {
      className: opts.className ? "app__ui-panel-legends " + opts.className : 'app__ui-panel-legends'
    });
    var size = (0, _utils2.get)(opts, 'legend.size');

    if (size) {
      (0, _utils2.set)(opts, 'legend.size.width', Math.min(size.width, (0, _utils.windowSize)().width));
    }

    _this = _super.call(this, opts) || this;
    return _this;
  }

  Object.defineProperty(LegendPanel.prototype, "legend", {
    /**
     * The underlying legend view instance.
     *
     * @readonly
     * @type {LegendView}
     * @memberof LegendPanel
     */
    get: function () {
      return this._legendView;
    },
    enumerable: true,
    configurable: true
  });

  LegendPanel.prototype.open = function () {
    if (this._legendView.count === 0) return;

    _super.prototype.open.call(this);
  };

  LegendPanel.prototype.contentSize = function () {
    var size = this._legendView.getSize();

    size.height += 5;
    return size;
  };

  LegendPanel.prototype._onAddedToDOM = function () {
    _super.prototype._onAddedToDOM.call(this);

    if (!this._legendView) {
      this._legendView = new _LegendView.default(this.ui.content, (0, _utils2.extend)({
        styles: {
          label: {
            color: '#ffffff'
          }
        }
      }, this.opts.legend));
    }
  };

  LegendPanel.prototype._setupEvents = function () {
    var _this = this;

    _super.prototype._setupEvents.call(this);

    this._legendView.on('empty', function (e) {
      _this.close();
    }).on('resize', function (e) {
      _this._layout();
    });
  };

  return LegendPanel;
}(_Panel.default);

var _default = LegendPanel;
exports.default = _default;
module.exports = exports.default;