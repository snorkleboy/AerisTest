import InfoPanelView, { InfoPanelViewOptions } from './InfoPanelView';
import View, { ViewOptions } from '../ui/View';
import ApiRequest from '../../network/api/ApiRequest';
/**
 * A data type that represents the configuration options for an info panel content view.
 */
export declare type InfoPanelContentViewOptions = ViewOptions & {
    /**
     * An array of view configurations or view section keys to render as part of this content
     * view. The order in which they appear in the array is the order in which they will be
     * rendered in the info panel.
     *
     * @type {InfoPanelViewOptions[]}
     */
    views: InfoPanelViewOptions[];
    /**
     *
     *
     * @type {*}
     */
    data?: any;
    /**
     * Request to use when loading data for the content view. This request should load all data
     * that is required by each view section. For API requests, this will often be a batch request.
     *
     * This value can either be a request instance or a function that returns a request instance.
     *
     * @type {ApiRequest | () => ApiRequest}
     */
    request?: ApiRequest | (() => ApiRequest);
};
/**
 * An `InfoPanelContentView` is a view component that manages and renders a series of individual
 * views to display within as an info panel's content. This object also requests remote data
 * required for the view as needed.
 *
 * @export
 * @class InfoPanelContentView
 * @extends {View<InfoPanelContentViewOptions>}
 */
export default class InfoPanelContentView extends View<InfoPanelContentViewOptions> {
    private _views;
    /**
     * Array of views associated with the content view.
     *
     * @readonly
     * @type {InfoPanelView[]}
     * @memberof InfoPanelContentView
     */
    readonly views: InfoPanelView[];
    /**
     * Initializes and returns an info panel content view configured with the specified options.
     *
     * @param {InfoPanelContentViewOptions} [opts]
     * @param {*} [data]
     * @memberof InfoPanelContentView
     */
    constructor(opts?: InfoPanelContentViewOptions, data?: any);
    /**
     * Requests data for the content view and renders the view with the new data.
     *
     * @param {*} [params] Parameters to use with the data request (optional)
     * @param {*} [append] Data to append to the loaded data that is also used in the content
     * view (optional)
     * @memberof InfoPanelContentView
     */
    load(params?: any, append?: any): void;
    protected _afterRender(): void;
}
