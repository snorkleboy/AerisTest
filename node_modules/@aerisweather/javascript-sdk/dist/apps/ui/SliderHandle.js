"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _Component = _interopRequireDefault(require("./Component"));

var _utils = require("../../utils");

var _DOM = _interopRequireDefault(require("../../display/DOM"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var __extends = void 0 && (void 0).__extends || function () {
  var extendStatics = function (d, b) {
    extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    };

    return extendStatics(d, b);
  };

  return function (d, b) {
    extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

var SliderHandle =
/** @class */
function (_super) {
  __extends(SliderHandle, _super);

  function SliderHandle(opts) {
    var _this = _super.call(this, (0, _utils.extend)({}, opts, {
      className: (0, _utils.get)(opts, 'className') ? "ui-slider-range-handle " + opts.className : 'ui-slider-range-handle'
    })) || this;

    _this._handleMouseDown = function (e) {
      _this.focus();
    };

    _this._handleMouseUp = function (e) {
      if (document.activeElement === _this.$el[0]) {
        _this.setClickFocus(true);
      }
    };

    _this._handleBlur = function (e) {
      _this.setClickFocus(false);
    };

    _this.update(0, opts);

    _this.$el.on('mousedown', _this._handleMouseDown);

    _this.$el.on('blur', _this._handleBlur);

    (0, _DOM.default)(document).on('mouseup', _this._handleMouseUp);
    return _this;
  }

  SliderHandle.prototype.setClickFocus = function (focused) {
    this.setState({
      clickFocused: focused
    });

    if (focused) {
      this.$el.addClass('awxjs__ui-slider-range-handle-click-focused');
    } else {
      this.$el.removeClass('awxjs__ui-slider-range-handle-click-focused');
    }
  };

  SliderHandle.prototype.clickFocus = function () {
    this.setClickFocus(true);
    this.focus();
  };

  SliderHandle.prototype.focus = function () {
    // console.log('handle.focus');
    this.$el[0].focus();
  };

  SliderHandle.prototype.blur = function () {
    // console.log('handle.blur');
    this.$el[0].blur();
  };

  SliderHandle.prototype.update = function (offset, opts) {
    this.$el.css('left', offset + "%");

    if (opts) {
      this.$el.attr('aria-valuemin', opts.values.min);
      this.$el.attr('aria-valuemax', opts.values.max);
      this.$el.attr('aria-valuenow', opts.values.current);
      this.$el.attr('aria-disabled', opts.disabled === true);
    }
  };

  SliderHandle.prototype._afterRender = function () {
    this.$el.attr('role', 'slider');

    if ((0, _utils.isset)(this.opts.tabindex)) {
      this.$el.attr('tabindex', this.opts.tabindex);
    }
  };

  return SliderHandle;
}(_Component.default);

var _default = SliderHandle;
exports.default = _default;
module.exports = exports.default;