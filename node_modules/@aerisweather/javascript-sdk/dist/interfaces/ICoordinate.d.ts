/**
 * A point coordinate representation.
 *
 * @export
 * @interface ICoordinate
 */
export interface ICoordinate {
    /** Latitude value */
    lat: number;
    /** Longitude value */
    lon: number;
}
/**
 * A rectangular region defined by corner coordinates.
 *
 * @export
 * @interface ICoordinateBounds
 */
export interface ICoordinateBounds {
    /** Northern latitude value */
    north: number;
    /** Western longitude value */
    west: number;
    /** Southern latitude value */
    south: number;
    /** Eastern latitude value */
    east: number;
}
/**
 * A pixel point representation.
 *
 * @export
 * @interface IPoint
 */
export interface IPoint {
    /** X value of the pixel position */
    x: number;
    /** Y value of the pixel position */
    y: number;
}
export interface ISize {
    width: number;
    height: number;
}
/**
 * A lat/lon numberical value array, e.g. `[37.3604, -105.1893]` or `[-105.1893, 37.3604]`.
 *
 * @export
 */
export declare type LatLonValue = number[];
/**
 * Generates a coordinate bounds object type from the array of coordinates.
 *
 * @param coords
 * @returns {ICoordinateBounds}
 */
export declare const boundsFromCoords: (coords: ICoordinate[]) => ICoordinateBounds;
